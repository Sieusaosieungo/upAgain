/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shoesmanagementcompany;

/**
 *
 * @author Đình Phúc
 */
import java.awt.Desktop;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.Iterator;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.apache.poi.openxml4j.opc.OPCPackage;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.xwpf.usermodel.IBodyElement;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFTable;
import org.apache.poi.xwpf.usermodel.XWPFTableCell;
import org.apache.poi.xwpf.usermodel.XWPFTableRow;

public class Statistics extends javax.swing.JPanel {

    /**
     * Creates new form Statistics
     */
    private Connection conn = null;
    private PreparedStatement pst = null;
    private DefaultTableModel modelStatistic = null;

    public Statistics() {
        initComponents();
        modelStatistic = (DefaultTableModel) tableStatistics.getModel();
        ConnectionDB connectDB = new ConnectionDB();
        conn = connectDB.getConnect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Statistic = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableStatistics = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        employeeCombo = new javax.swing.JComboBox<>();
        customerCombo = new javax.swing.JComboBox<>();
        supplierCombo = new javax.swing.JComboBox<>();
        productCombo = new javax.swing.JComboBox<>();
        exportCombo = new javax.swing.JComboBox<>();
        importCombo = new javax.swing.JComboBox<>();
        statisticImport = new javax.swing.JTextField();
        statisticExport = new javax.swing.JTextField();
        lbStatistic = new javax.swing.JLabel();
        jToolBar6 = new javax.swing.JToolBar();
        jButton7 = new javax.swing.JButton();
        jToolBar4 = new javax.swing.JToolBar();
        exportFile = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1220, 710));

        tableStatistics.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tableStatistics.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableStatistics.setRowHeight(20);
        jScrollPane1.setViewportView(tableStatistics);

        jLabel1.setBackground(new java.awt.Color(96, 96, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(96, 96, 255));
        jLabel1.setText("Thống kê nhân viên");

        jLabel2.setBackground(new java.awt.Color(96, 96, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(96, 96, 255));
        jLabel2.setText("Thống kê khách hàng");

        jLabel3.setBackground(new java.awt.Color(96, 96, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(96, 96, 255));
        jLabel3.setText("Thống kê nhà cung cấp");

        jLabel4.setBackground(new java.awt.Color(96, 96, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(96, 96, 255));
        jLabel4.setText("Thống kê sản phẩm");

        jLabel5.setBackground(new java.awt.Color(96, 96, 255));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(96, 96, 255));
        jLabel5.setText("Thống kê nhập hàng");

        jLabel6.setBackground(new java.awt.Color(96, 96, 255));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(96, 96, 255));
        jLabel6.setText("Thống kê xuất hàng");

        employeeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Theo tên nhân viên", "Theo năm sinh", "Theo địa chỉ ", "Theo chức vụ" }));
        employeeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeComboActionPerformed(evt);
            }
        });

        customerCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Theo tên khách hàng", "Theo năm sinh", "Theo địa chỉ", "Theo giới tính" }));
        customerCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerComboActionPerformed(evt);
            }
        });

        supplierCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Theo địa chỉ" }));
        supplierCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierComboActionPerformed(evt);
            }
        });

        productCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Theo tên sản phẩm", "Theo nhà cung cấp", "Theo nhà sản xuất", "Theo thể loại", "Theo kích thước", "Theo màu" }));
        productCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productComboActionPerformed(evt);
            }
        });

        exportCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tổng quát", "Cho nhân viên", "Cho khách hàng" }));

        importCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tổng quát", "Cho nhân viên", "Cho nhà cung cấp" }));

        statisticImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statisticImportActionPerformed(evt);
            }
        });

        statisticExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statisticExportActionPerformed(evt);
            }
        });

        lbStatistic.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        lbStatistic.setForeground(new java.awt.Color(96, 96, 255));
        lbStatistic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbStatistic.setText("THỐNG KÊ ");

        jToolBar6.setBackground(new java.awt.Color(255, 255, 255));
        jToolBar6.setRollover(true);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shoesmanagementcompany/IconColor/icons8_Combo_Chart_37px.png"))); // NOI18N
        jButton7.setToolTipText("Thống kê");
        jButton7.setOpaque(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar6.add(jButton7);

        jToolBar4.setBackground(new java.awt.Color(255, 255, 255));
        jToolBar4.setRollover(true);

        exportFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shoesmanagementcompany/IconColor/icons8_Microsoft_Word_37px.png"))); // NOI18N
        exportFile.setToolTipText("Xuất file");
        exportFile.setOpaque(false);
        exportFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportFileActionPerformed(evt);
            }
        });
        jToolBar4.add(exportFile);

        javax.swing.GroupLayout StatisticLayout = new javax.swing.GroupLayout(Statistic);
        Statistic.setLayout(StatisticLayout);
        StatisticLayout.setHorizontalGroup(
            StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatisticLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StatisticLayout.createSequentialGroup()
                        .addGroup(StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(employeeCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(60, 60, 60)
                        .addGroup(StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(customerCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(60, 60, 60)
                        .addGroup(StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(supplierCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)
                        .addGroup(StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(productCombo, 0, 145, Short.MAX_VALUE))
                        .addGap(60, 60, 60)
                        .addGroup(StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(exportCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(importCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20)
                        .addGroup(StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(statisticImport, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                            .addComponent(statisticExport)))
                    .addComponent(lbStatistic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(StatisticLayout.createSequentialGroup()
                .addComponent(jToolBar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        StatisticLayout.setVerticalGroup(
            StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StatisticLayout.createSequentialGroup()
                .addGroup(StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToolBar6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(statisticImport, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StatisticLayout.createSequentialGroup()
                        .addGroup(StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(StatisticLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(productCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(StatisticLayout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(importCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(8, 8, 8)
                        .addGroup(StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(statisticExport, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(StatisticLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(supplierCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(employeeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exportCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbStatistic, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Statistic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Statistic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    @Override
    protected void printBorder(Graphics g) {
        super.printBorder(g); //To change body of generated methods, choose Tools | Templates.
    }

    private void removeAllRow() {
        DefaultTableModel modelDelete = (DefaultTableModel) tableStatistics.getModel();
        modelDelete.setRowCount(0);
        if (modelDelete.getRowCount() != 0) {
            modelDelete.setRowCount(0);
        }
    }

    private void statistics(String sql, int col) {
        int i = 1;
        try {
            pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                Vector<String> vector = new Vector<>();
                vector.add(i++ + "");
                for (int j = 1; j <= col; j++) {
                    vector.add(rs.getString(j));
                }
                modelStatistic.addRow(vector);
            }
        } catch (SQLException ex) {
            JOptionPane.showConfirmDialog(null, "Error " + ex.getMessage());
            Logger.getLogger(Statistics.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    private void employeeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeComboActionPerformed
        removeAllRow();
        Object obj = evt.getSource();
        String sql1 = "Select hoTen , count(hoTen) From quanlybangiay.nhanvien Group by hoTen;";
        String sql2 = "Select YEAR(ngaySinh), count(YEAR(ngaySinh)) From quanlybangiay.nhanvien Group by YEAR(ngaySinh);";
        String sql3 = "Select diaChi , count(diaChi) From quanlybangiay.nhanvien Group by diaChi;";
        String sql4 = "Select chucVu , count(chucVu) From quanlybangiay.nhanvien Group by chucVu;";
        if (obj == employeeCombo) {
            int index = employeeCombo.getSelectedIndex();
            switch (index) {
                case 0:
                    lbStatistic.setText("THỐNG KÊ NHÂN VIÊN THEO TÊN");
                    modelStatistic.setColumnIdentifiers(new Object[]{
                        " STT ", " Họ Tên ", " Số Lượng "
                    });
                    statistics(sql1, 2);
                    break;
                case 1:
                    lbStatistic.setText("THỐNG KÊ NHÂN VIÊN THEO NĂM SINH");
                    modelStatistic.setColumnIdentifiers(new Object[]{
                        " STT ", " Năm Sinh ", " Số Lượng "
                    });
                    statistics(sql2, 2);
                    break;
                case 2:
                    lbStatistic.setText("THỐNG KÊ NHÂN VIÊN THEO ĐỊA CHỈ");
                    modelStatistic.setColumnIdentifiers(new Object[]{
                        " STT ", " Địa Chỉ ", " Số Lượng "
                    });
                    statistics(sql3, 2);
                    break;
                case 3:
                    lbStatistic.setText("THỐNG KÊ NHÂN VIÊN THEO CHỨC VỤ");
                    modelStatistic.setColumnIdentifiers(new Object[]{
                        " STT ", " Chức Vụ ", " Số Lượng "
                    });
                    statistics(sql4, 2);
                    break;
            }
        }
    }//GEN-LAST:event_employeeComboActionPerformed

    private void productComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productComboActionPerformed
        removeAllRow();
        Object obj = evt.getSource();

        String sql1 = "Select tenSP, sum(soLuongCon) , sum(tongSoLuong) from quanlybangiay.sanpham group by tenSP;";

        String sql2 = "Select tenSP, maNCC , tenNCC ,   sum(soLuongCon) , sum(tongSoLuong) \n"
                + "from (quanlybangiay.sanpham as A  natural join quanlybangiay.nhacungcap as B) \n"
                + "Group by maNCC;";

        String sql3 = "Select tenSP, nhaSanXuat ,sum(soLuongCon) , sum(tongSoLuong) \n"
                + "from quanlybangiay.sanpham\n"
                + "Group by nhaSanXuat;";

        String sql4 = "Select theLoai ,sum(soLuongCon) , sum(tongSoLuong) \n"
                + "from quanlybangiay.sanpham\n"
                + "Group by theLoai;";

        String sql5 = "Select kichThuoc ,sum(soLuongCon) , sum(tongSoLuong) \n"
                + "from quanlybangiay.sanpham\n"
                + "Group by kichThuoc;";

        String sql6 = "Select mau ,sum(soLuongCon) , sum(tongSoLuong) \n"
                + "from quanlybangiay.sanpham\n"
                + "Group by mau;";

        if (obj == productCombo) {
            int index = productCombo.getSelectedIndex();
            switch (index) {
                case 0:
                    lbStatistic.setText("THỐNG KÊ SẢN PHẨM THEO TÊN SẢN PHẨM");
                    modelStatistic.setColumnIdentifiers(new Object[]{
                        " STT ", " Tên Sản Phẩm ", " Số Lượng Còn ", " Tổng Số Lượng "
                    });
                    statistics(sql1, 3);
                    break;
                case 1:
                    lbStatistic.setText("THỐNG KÊ SẢN PHẨM THEO NHÀ CUNG CẤP");
                    modelStatistic.setColumnIdentifiers(new Object[]{
                        " STT ", " Tên Sản Phẩm ", " Mã Nhà Cung Cấp ",
                        " Tên Nhà Cung Cấp ", "      Số Lượng Còn", " Tổng Số Lượng "
                    });
                    statistics(sql2, 5);
                    break;
                case 2:
                    lbStatistic.setText("THỐNG KÊ SẢN PHẨM THEO NHÀ SẢN XUẤT");
                    modelStatistic.setColumnIdentifiers(new Object[]{
                        " STT ", " Tên Sản Phẩm", " Nhà Sản Xuất ", " Số Lượng Còn ", " Tổng Số Lượng "
                    });
                    statistics(sql3, 4);
                    break;
                case 3:
                    lbStatistic.setText("THỐNG KÊ SẢN PHẨM THEO THỂ LOẠI");
                    modelStatistic.setColumnIdentifiers(new Object[]{
                        " STT ", " Thể Loại", "Số Lượng Còn ", " Tổng Số Lượng "
                    });
                    statistics(sql4, 3);
                    break;
                case 4:
                    lbStatistic.setText("THỐNG KÊ SẢN PHẨM THEO KÍCH THƯỚC");
                    modelStatistic.setColumnIdentifiers(new Object[]{
                        " STT ", " Kích Thước ", " Số Lượng Còn ", " Tổng Số Lượng "
                    });
                    statistics(sql5, 3);
                    break;
                case 5:
                    lbStatistic.setText("THỐNG KÊ SẢN PHẨM THEO MÀU SẮC");
                    modelStatistic.setColumnIdentifiers(new Object[]{
                        " STT ", " Màu Sắc ", " Số Lượng Còn ", " Tổng Số Lượng "
                    });
                    statistics(sql6, 3);
                    break;
            }
        }
    }//GEN-LAST:event_productComboActionPerformed

    private void statisticImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statisticImportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statisticImportActionPerformed

    private void statisticExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statisticExportActionPerformed


    }//GEN-LAST:event_statisticExportActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        new ChartFrame().setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void exportFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportFileActionPerformed
        // TODO add your handling code here:
        try {
            // mở file word, trong đó file word trích đường dẫn như ví dụ bên dưới
            FileInputStream fis = new FileInputStream(System.getProperty("user.home") + "\\Desktop\\TestWord.docx");
            XWPFDocument xdoc = new XWPFDocument(OPCPackage.open(fis));
            // con trỏ duyệt phần thân của file word
            Iterator bodyElementIterator = xdoc.getBodyElementsIterator();
            // duyệt phần body
            while (bodyElementIterator.hasNext()) {
                IBodyElement element = (IBodyElement) bodyElementIterator.next();
                // lấy tất cả các bảng trong phần body
                if ("TABLE".equalsIgnoreCase(element.getElementType().name())) {
                    java.util.List<XWPFTable> tableList = element.getBody().getTables();
                    // giờ xử lý với từng bảng, vì trong biểu mẫu chỉ có một bảng nên nó sẽ chỉ xử lý 1 lần
                    for (XWPFTable table : tableList) {

                        for (int i = 1; i < table.getRows().size(); i++) {
                            for (int j = 0; j < table.getRow(i).getTableCells().size(); j++) {

                                XWPFParagraph paragraph = table.getRow(i).getCell(j).addParagraph();

                            }

                        }

                    }
                }
            }
            OutputStream out = new FileOutputStream(System.getProperty("user.home") + "\\Desktop\\TestWord.docx");
            xdoc.write(out);
            out.close();

        } catch (IOException | InvalidFormatException ex) {
        }
        int dialogResult = JOptionPane.showConfirmDialog(null, "File đã tạo thành công!\nBạn có muốn mở file?");
        if (dialogResult == JOptionPane.YES_OPTION) {
            if (Desktop.isDesktopSupported()) {
                try {
                    File myFile = new File(System.getProperty("user.home") + "\\Desktop\\TestWord.docx");
                    Desktop.getDesktop().open(myFile);
                } catch (IOException ex) {
                    // no application registered for PDFs
                }
            }
        } else {
        }
    }//GEN-LAST:event_exportFileActionPerformed

    private void customerComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerComboActionPerformed
        removeAllRow();
        Object obj = evt.getSource();
        String sql1 = "Select hoTen,count(hoTen) From quanlybangiay.khachhang Group by hoTen;";
        String sql2 = "Select YEAR(ngaySinh), count(YEAR(ngaySinh)) From quanlybangiay.khachhang Group by YEAR(ngaySinh);";
        String sql3 = "Select diaChi,count(diaChi) From quanlybangiay.khachhang Group by diaChi;";
        String sql4 = "Select gioiTinh,count(gioiTinh) From quanlybangiay.khachhang Group by gioiTinh;";
        if (obj == customerCombo) {
            int index = customerCombo.getSelectedIndex();
            switch (index) {
                case 0:
                    lbStatistic.setText("THỐNG KÊ KHÁCH HÀNG THEO TÊN");
                    modelStatistic.setColumnIdentifiers(new Object[]{
                        " STT ", " Họ Tên ", " Số Lượng "
                    });
                    statistics(sql1, 2);
                    break;
                case 1:
                    lbStatistic.setText("THỐNG KÊ KHÁCH HÀNG THEO NĂM SINH");
                    modelStatistic.setColumnIdentifiers(new Object[]{
                        " STT ", " Năm Sinh ", " Số Lượng "
                    });
                    statistics(sql2, 2);
                    break;
                case 2:
                    lbStatistic.setText("THỐNG KÊ KHÁCH HÀNG THEO ĐỊA CHỈ");
                    modelStatistic.setColumnIdentifiers(new Object[]{
                        " STT ", " Địa Chỉ ", " Số Lượng "
                    });
                    statistics(sql3, 2);
                    break;
                case 3:
                    lbStatistic.setText("THỐNG KÊ KHÁCH HÀNG THEO GIỚI TÍNH");
                    modelStatistic.setColumnIdentifiers(new Object[]{
                        " STT ", " Giới Tính ", " Số Lượng "
                    });
                    statistics(sql3, 2);
                    break;
            }
        }
    }//GEN-LAST:event_customerComboActionPerformed

    private void supplierComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierComboActionPerformed
        removeAllRow();
        Object obj = evt.getSource();
        String sql1 = "Select diaChi,count(diaChi) From quanlybangiay.nhacungcap Group by diaChi;";

        if (obj == supplierCombo) {
            int index = supplierCombo.getSelectedIndex();
            switch (index) {
                case 0:
                    modelStatistic.setColumnIdentifiers(new Object[]{
                        " STT ", " Địa Chỉ ", " Số Lượng "
                    });
                    statistics(sql1, 2);
                    break;
            }
        }
    }//GEN-LAST:event_supplierComboActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Statistic;
    private javax.swing.JComboBox<String> customerCombo;
    private javax.swing.JComboBox<String> employeeCombo;
    private javax.swing.JComboBox<String> exportCombo;
    private javax.swing.JButton exportFile;
    private javax.swing.JComboBox<String> importCombo;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar4;
    private javax.swing.JToolBar jToolBar6;
    private javax.swing.JLabel lbStatistic;
    private javax.swing.JComboBox<String> productCombo;
    private javax.swing.JTextField statisticExport;
    private javax.swing.JTextField statisticImport;
    private javax.swing.JComboBox<String> supplierCombo;
    private javax.swing.JTable tableStatistics;
    // End of variables declaration//GEN-END:variables
}
